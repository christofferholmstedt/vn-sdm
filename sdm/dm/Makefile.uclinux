ifndef PETALINUX
$(error You must source the petalinux/settings.sh script before working with PetaLinux)
endif

# Point to default PetaLinux root directory
ifndef ROOTDIR
ROOTDIR=$(PETALINUX)/software/petalinux-dist
endif

PATH:=$(PATH):$(ROOTDIR)/tools

UCLINUX_BUILD_USER = 1
-include $(ROOTDIR)/.config
-include $(ROOTDIR)/$(CONFIG_LINUXDIR)/.config
LIBCDIR = $(CONFIG_LIBCDIR)
-include $(ROOTDIR)/config.arch
ROMFSDIR=$(ROOTDIR)/romfs
ROMFSINST=$(ROOTDIR)/tools/romfs-inst.sh

APP = dm
MONITOR_APP = dm_monitor

# Add any other object files to this list below
APP_OBJS = DM.o  Parse.o xTEDSLibrary.o xTEDSLibraryList.o xTEDSParameters.o Subscription.o SubscriptionList.o backupDMList.o xTEDSSegmentBuilder.o DMUtils.o ProviderSubscriptionList.o ProviderSubscription.o
MONITOR_APP_OBJS=dm_monitor.o

FLTFLAGS+=-s 2097152
export FLTFLAGS

LDLIBS += -lSDM -lpthread -lstdc++
LDFLAGS += -L../common/
all: $(APP) $(MONITOR_APP)

$(APP): $(APP_OBJS)
	$(CXX) $(LDFLAGS) -o $@ $(APP_OBJS) $(LDLIBS)
	cp $@ ../../FLIGHT_BINARIES/

$(MONITOR_APP): $(MONITOR_APP_OBJS)
	$(CXX) $(LDFLAGS) -o $@ $(MONITOR_APP_OBJS) $(LDLIBS)

clean:
	-rm -f $(APP) $(MONITOR_APP) *.elf *.gdb *.o

romfs:
	$(ROMFSINST) $(APP) /bin/$(APP)
	$(ROMFSINST) $(MONITOR_APP) /bin/$(MONITOR_APP)

%.o: %.cpp
	$(CXX) -c $(CXXFLAGS) -o $@ $<


# Targets for the required .config files - if they don't exist, the tree isn't
# configured.  Tell the user this, how to fix it, and exit.
${ROOTDIR}/config.arch ${ROOTDIR}/.config:
	@echo "Error: You must configure the PetaLinux tree before compiling your application"
	@echo ""
	@echo "Change directory to ../../petalinux-dist and 'make menuconfig' or 'make xconfig'"
	@echo ""
	@echo "Once the tree is configured, return to this directory, and re-run make."
	@echo ""
	@exit -1

