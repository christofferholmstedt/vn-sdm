ifndef PETALINUX
$(error You must source the petalinux/settings.sh script before working with PetaLinux)
endif

# Point to default PetaLinux root directory
ifndef ROOTDIR
ROOTDIR=$(PETALINUX)/software/petalinux-dist
endif

PATH:=$(PATH):$(ROOTDIR)/tools

UCLINUX_BUILD_USER = 1
-include $(ROOTDIR)/.config
-include $(ROOTDIR)/$(CONFIG_LINUXDIR)/.config
LIBCDIR = $(CONFIG_LIBCDIR)
-include $(ROOTDIR)/config.arch
ROMFSDIR=$(ROOTDIR)/romfs
ROMFSINST=$(ROOTDIR)/tools/romfs-inst.sh

MAKEFILE_DEFS=Makefile.defs.uclinux
export MAKEFILE_DEFS
APPFOLDERS_BUILD=dm tm pm app/examples
APPFOLDERS_ROMFS=dm tm pm

all: libSDM subdirs

subdirs:
	for dir in $(APPFOLDERS_BUILD); do\
		make -C $$dir -f Makefile.uclinux;\
	done

libSDM:
	make -C common uclinux

examples: libSDM
	make -C app/examples all

clean:
	for dir in $(APPFOLDERS_BUILD); do\
		make -C $$dir -f Makefile.uclinux clean;\
	done
	make -C common clean

romfs: libSDM subdirs
	for dir in $(APPFOLDERS_ROMFS); do\
		make -C $$dir -f Makefile.uclinux romfs;\
	done

#	$(ROMFSINST) $(APP) /bin/$(APP)

%.o: %.c
	$(CC) -c $(CFLAGS) -o $@ $<


# Targets for the required .config files - if they don't exist, the tree isn't
# configured.  Tell the user this, how to fix it, and exit.
${ROOTDIR}/config.arch ${ROOTDIR}/.config:
	@echo "Error: You must configure the PetaLinux tree before compiling your application"
	@echo ""
	@echo "Change directory to ../../petalinux-dist and 'make menuconfig' or 'make xconfig'"
	@echo ""
	@echo "Once the tree is configured, return to this directory, and re-run make."
	@echo ""
	@exit -1

