#include "../../common/message/SDMxTEDS.h"
#include "../../common/message/SDMData.h"
#include "../../common/message/SDMCancelxTEDS.h"
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

void RegisterxTEDS();
void CancelxTEDS();

long my_port;

int main(int argc,char** argv)
{
	SDMData dat;

	SDMInit(argc,argv);
	my_port = getPort();
	RegisterxTEDS();
	CancelxTEDS();
}

void RegisterxTEDS()
{
	SDMxTEDS  xteds;	// create an xTEDS registration message

	strcpy (xteds.xTEDS,"<!--Sample XML file generated by XMLSpy v2005 rel. 3 U (http://www.altova.com)-->\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Th-is is a \t com-ment wit-h n-ame \nin the co-mment -->\n<xTEDS xmlns=\"http://www.interfacecontrol.com/SPA/xTEDS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" <!-- comment --> name=\"ParticleFluxService_xTEDS\" version=\"2.0\" description=\"xTEDS For Particle Flux Service\">\n\n\t<Device name=\"ParticleFluxService\" id=\"11\" kind=\"Software\" description=\"Particle Flux Data Processing Service\">\n\t\t<Qualifier value=\"heat\" name=\"Head\" units=\"none\"/>\n\t\t<Location x=\"a\" z=\"c\" y=\"b\" units=\"d\"></Location>\n\t\t<Orientation axis=\"Y\" angle=\"10\" units=\"beta\"/>\n\t\t<!--       --><Orientation axis=\"Z\" angle=\"16\" units=\"degrees\"></Orientation>\n\t</Device>\n\n\t<!-- comment --><!-- co-mme-nt --><Interface name=\"Particle_Interface\" id=\"1\">\n\t\t<Variable name=\"severity\" kind=\"Severity Level\" format=\"UINT08\" description=\"the severity level of data\"/>\n\t\t<Variable name=\"trend\" kind=\"Trend\" format=\"UINT08\" description=\"The trend of data progression\"/>\n\t\t<Variable name=\"startTS\" format=\"UINT08\" kind=\"time_stamp\" length=\"15\" description=\"Starting timestamp of data making up this result\"/>\n\t\t<Variable name=\"endTS\" format=\"UINT08\" kind=\"time_stamp\" length=\"15\" description=\"Ending timestamp of data making up this result\"/>\n\n\t\t<Notification>\n\t\t\t<DataMsg name=\"particleFluxData\" msgArrival=\"PERIODIC\" msgRate=\"Stream\" id=\"12\" description=\"Particle Flux data processing interim result\">\n\t\t\t\t<VariableRef name=\"severity\"/>\n\t\t\t\t<VariableRef name=\"trend\"/>\n\t\t\t\t<VariableRef name=\"startTS\"/>\n\t\t\t\t<VariableRef name=\"endTS\"/>\n\t\t\t</DataMsg>\n\t\t</Notification>\n\t</Interface>\n\n</xTEDS>\n");	// set xTEDS

	xteds.source.setSensorID(1);		// set the id of this application
	xteds.source.setPort(my_port);
	printf("Registering producer xTEDS on port %ld\n",my_port);
	xteds.Send();				// register with the SDM
	/*xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM
	xteds.Send();				// register with the SDM*/
}

void CancelxTEDS()
{
	SDMCancelxTEDS cancel;
	printf("Canceling xTEDS\n");
	cancel.source.setSensorID(1);
	cancel.source.setPort(my_port);
	cancel.Send();
}
